Treinando KNN para entrada: 1000
Acuracia: 0.791768
[[5279    2   40   51   13   22  122    0   20   11]
 [  48 3155 1372  142   71   14  583   95  455  720]
 [  18    5 5460  189   10    3   37  136   22    8]
 [  12    3  526 4534   47   62    3  421   12  199]
 [  22    3   68    2 5156    0  166   21   12  272]
 [  12   11  236  396  145 4298   71   49  118  203]
 [  75   28   18    1   26  109 5484    0  117    0]
 [   0   16   92   54  227    2    0 4748   22  936]
 [ 604   30  370   57  192   75  152   71 3120 1024]
 [  36   14   44  157  174    5    4  153   26 5200]]
 
Treinando Naive Bayes para entrada: 1000
Acuracia: 0.674351
[[4157    1  890   85   11   98   34   37  246    1]
 [  16 2901 2288  130  119   36  596  158  302  109]
 [   5    4 5182  616   29    5    4   34    3    6]
 [   2    1  752 4336   47   27    0  646    1    7]
 [  12    0 1933   35 3251   24   16   96   62  293]
 [   3    7 1325  100    9 3856   12   39   95   93]
 [   7    1 1689    3    0  256 3654    4  244    0]
 [   2   12  613  261   98    2    0 4934   29  146]
 [ 361    0 1687  273   66   88   27   16 3136   41]
 [  13    0  691  178  539   46    0   82  123 4141]]
 
Treinando LDA para entrada: 1000
/home/elo/.local/lib/python2.7/site-packages/sklearn/discriminant_analysis.py:388: UserWarning: Variables are collinear.
  warnings.warn("Variables are collinear.")
Acuracia: 0.787317
[[5151  112   16   49   29  108   33   14    9   39]
 [   1 4155 1046  133  156  178  338  254  321   73]
 [  29   50 5367   23    4    0   13  384   18    0]
 [   2   53   56 4393    1  112   10 1103   72   17]
 [  65  401  208    0 4622    2   68   17   25  314]
 [  11   84   10  566    4 4633   63   58   81   29]
 [ 190  952   56  110   72   65 4295    5  109    4]
 [   0 1142   59   11   40   10    0 4773   36   26]
 [ 188  132   74   62   48   49  349   79 3630 1084]
 [ 121   81   58  147   19   41   48  107   37 5154]]
 
Treinando Logistic Regression para entrada: 1000
/home/elo/.local/lib/python2.7/site-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.
  FutureWarning)
/home/elo/.local/lib/python2.7/site-packages/sklearn/linear_model/logistic.py:460: FutureWarning: Default multi_class will be changed to 'auto' in 0.22. Specify the multi_class option to silence this warning.
  "this warning.", FutureWarning)
Acuracia: 0.724585
[[5001    6  185   37   58   20  225    5   17    6]
 [   9 2996  625  237  627   17 1059   50  465  570]
 [  37   33 5434   92   22    5   59  186   14    6]
 [  11    8 1135 3704  277   50   21  455    4  154]
 [  32    7   35    1 5378    0  132   19    7  111]
 [  20   12  374  831  636 3181  231  144   45   65]
 [ 104   44   60    0   96  158 5318    0   78    0]
 [   0   83   37   31  289    2    0 5088   20  547]
 [ 995   76  260   46  427   75  461  168 1927 1260]
 [  74   36   20  117  869    0    4  206   20 4467]]
 
Treinando KNN para entrada: 2000
Acuracia: 0.866845
[[5334    2   14   49   14    2  111    0   29    5]
 [  15 5242  204  334   53    9  303   94  157  244]
 [  16   10 5449  267    5    1   32   92   14    2]
 [   6    4   72 5389    2   45    4  233   31   33]
 [  19    9   44   25 5159    0  154   16    7  289]
 [   9    8   26 1009   67 4157   64   32   81   86]
 [  35   24    4    6   17   76 5604    0   92    0]
 [   2   17   73  178  123    2    2 4870   14  816]
 [ 196   31   51  248   80   43   94   51 4553  348]
 [  29   22   16  266  187    2    7  176   28 5080]]
 
Treinando Naive Bayes para entrada: 2000
Acuracia: 0.782014
[[4474    1  563  128    7   39   50   20  276    2]
 [   2 3948 1327  565  100   26  251  222  113  101]
 [   6   14 4495 1157    5    7   10  144   20   30]
 [   6    1  205 5199   19   18    0  336    8   27]
 [   3    2  765   47 3974   28   71   60  104  668]
 [   6   13  420   96   56 4600   33   20  102  193]
 [   8    3  546    6    5  157 4575    0  557    1]
 [   0   23  370  383   41    0    0 5221   12   47]
 [ 307    2  256  577   37   71   34   15 4310   86]
 [  12    2  103  326  116   16    3   50  119 5066]]
 
Treinando LDA para entrada: 2000
Acuracia: 0.873274
[[5268   37   11   22   49   18   61    9   81    4]
 [   1 5487  226  152    3  107  164  386   76   53]
 [  19   48 5298   21    1    6   12  463   17    3]
 [   3   32   46 4971    0   38   10  681   24   14]
 [  28  507   67    0 4544    2   78   27   37  432]
 [  11   25    8  379    3 4920   68   38   62   25]
 [ 116   88   44  116   62  220 5094    0  115    3]
 [   0  131   51    4   17    1    0 5829   27   37]
 [ 125  110   45   24   41   54  182   63 4483  568]
 [  32   62    5  151   21   37   18  147   20 5320]]
 
Treinando Logistic Regression para entrada: 2000
Acuracia: 0.774460
[[4990    9   58   91   43   14  303    6   43    3]
 [   5 3341  156  358  340   66 1479   82  207  621]
 [  32   32 5330  104   22    4  122  217   18    7]
 [  10   11  136 5132   83   46   24  311    5   61]
 [  40    6   12    2 5359    0  169   28    1  105]
 [  15   13   67 1391  366 3289  253   96   22   27]
 [  79   49    2    7   40  199 5427    0   55    0]
 [   0   81   28   59  239    5    0 5340    4  341]
 [ 686   86   86   58  273   82  529  189 2706 1000]
 [  89   34    6  174  725    2   10  265    3 4505]]
 
Treinando KNN para entrada: 3000
Acuracia: 0.890103
[[5367    3    7   34   17   16   74    1   38    3]
 [  16 5756  186  159   44    6  208   66  140   74]
 [  18   20 5345  375    8    2   24   79   16    1]
 [   5    6   29 5443    5   57    4  210   30   30]
 [  17   19   37    3 5200    0  148   28    6  264]
 [  12   13   14  645   62 4550   50   35   79   79]
 [  39   29    4    1   17  104 5604    0   60    0]
 [   2   26   71  179  120    1    1 5036   16  645]
 [ 136   90   44  140   80   36   88   43 4813  225]
 [  12   26   18  215  175    7    6  238   29 5087]]
 
Treinando Naive Bayes para entrada: 3000
Acuracia: 0.838420
[[4733    1  271   66    3    9  149    1  326    1]
 [   1 4883  770  262  119   12  215  207  130   56]
 [  16   29 5032  561   15    0   39  123   59   14]
 [   7    1  372 5058    3   11    3  301   42   21]
 [   7    3  262    4 4722   19  133   70  101  401]
 [   4   33  388   92   48 4579   61    6   62  266]
 [   7    4  111    5    7  134 5402    0  187    1]
 [   4   44  342  317   41    0    1 5269   61   18]
 [ 225    2  382  272   38   69  130   12 4470   95]
 [   8    3  228  130  137   14   11  151  109 5022]]
 
Treinando LDA para entrada: 3000
Acuracia: 0.893548
[[5228   21   23   32   44    3   76   12  120    1]
 [   1 5678  224  125    5   89  133  289   79   32]
 [  16   43 5383   17    2    1   22  385   18    1]
 [   5   37   35 5032    1   19    3  653   20   14]
 [  12  317   45    0 4899    0   73   21   19  336]
 [   9   32    8  262    4 5050   57   36   55   26]
 [  98   52   29   15  133   81 5347    0  100    3]
 [   0  139   40    4   32    1    0 5832   23   26]
 [  92  115   38   14   46   80  117   52 4638  503]
 [  12   57    6  135   46   33   18  165   25 5316]]
 
Treinando Logistic Regression para entrada: 3000
Acuracia: 0.793370
[[4991   10   24   99   47   25  310   10   42    2]
 [   3 3516  157  298  441  107 1363  121  132  517]
 [  29   30 5280  100   26    2  136  259   22    4]
 [   9    9   58 5173   99   53   16  352    7   43]
 [  36    7   13    1 5360    0  151   40    1  113]
 [  15   13   25 1224  345 3592  196   96   18   15]
 [  74   45    0    6   41  236 5415    0   41    0]
 [   0   80   23   61  273    6    0 5452    5  197]
 [ 504   72   59   45  260   91  440  221 3215  788]
 [  65   31    5  156  688    3   10  317    4 4534]]
 
Treinando KNN para entrada: 4000
Acuracia: 0.893838
[[5323    3    7   89   21    3   82    3   29    0]
 [  18 5781  179  131   32   10  216   92  149   47]
 [  19   21 5442  270    5    3   29   72   25    2]
 [   4    7   24 5518    6   44    3  165   21   27]
 [  16   20   38    3 5152    0  148   34   13  298]
 [  13   11   21  626   49 4570   46   39   88   76]
 [  38   27    2    2   18   99 5609    0   63    0]
 [   1   27   60  168  174    1    1 5093   59  513]
 [ 148   77   54  146   74   30   81   42 4862  181]
 [  12   25   14  217  156    7    5  275   32 5070]]
 
Treinando Naive Bayes para entrada: 4000
Acuracia: 0.844900
[[4421    1  221  103   34   20  109    1  649    1]
 [   4 4773  830  257  104   19  194  232  174   68]
 [  11   21 5092  577   16    0   48   70   50    3]
 [   4    1  485 5051    4   19    2  230    9   14]
 [   2    3  206   13 4921    6   77   50  113  331]
 [   4   12  139   94   25 4879   67    3   78  238]
 [   6    3  113    5   24  123 5348    0  236    0]
 [   5   32  378  339   34    2    1 5219   71   16]
 [ 196    2  182  196   29   48   92   11 4853   86]
 [  12    3  181  176  133   14    8  159  134 4993]]
 
Treinando LDA para entrada: 4000
Acuracia: 0.885363
[[5080   16   16   46   43    6   81   15  256    1]
 [   0 5503  355  108    4   87  163  313   69   53]
 [  13   43 5432   10    0    1   33  329   27    0]
 [   4   36   41 5022    1   27    3  654   18   13]
 [  15  290   52    0 4804    1   88   28   37  407]
 [  10   32   12  285    3 4994   72   49   58   24]
 [  91   48   31   13  148   72 5363    0   89    3]
 [   0  131   44    3   28    1    0 5831   34   25]
 [ 115   98   36   11   48   64  150   65 4655  453]
 [  19   49   10  138   37   14   23  251   33 5239]]
 
Treinando Logistic Regression para entrada: 4000
Acuracia: 0.802050
[[4992    8   25   89   52   33  313   14   33    1]
 [   2 3511  190  268  308  113 1426  148  131  558]
 [  25   31 5333   68   25    2  139  228   34    3]
 [   8    9   72 5112   87   53   18  412    7   41]
 [  39    6   14    1 5315    1  148   53    2  143]
 [  13   10   25 1053  322 3793  187  102   21   13]
 [  72   38    0    3   44  212 5438    0   51    0]
 [   0   77   25   68  243    6    0 5485   12  181]
 [ 476   71   55   48  226   76  427  233 3440  643]
 [  61   32    6  151  551    3   10  373    8 4618]]
 
Treinando KNN para entrada: 5000
Acuracia: 0.897742
[[5423    5    0   30    9    2   65    2   24    0]
 [   5 5751  188  123   43    7  184   72  184   98]
 [  18   16 5427  306    4    2   26   62   24    3]
 [   6    7   23 5564    8   43    4  112   20   32]
 [  14   11   37    3 5217    0  152   21   14  253]
 [  10   10    9  619   46 4538   59   41  128   79]
 [  41   17    3    1   16   94 5600    0   86    0]
 [   1   23   59  172  182    1    1 5065   46  547]
 [ 152   60   49  157   72   26   87   42 4871  179]
 [  12   15   14  214  145    2    8  180   30 5193]]
 
Treinando Naive Bayes para entrada: 5000
Acuracia: 0.855097
[[5113    1   35   65   24   11   79    0  231    1]
 [   4 4570  857  327  108   19  135  366  166  103]
 [  14   19 5008  676   12    1   22   85   46    5]
 [   5    1  379 5178    3   18    0  207    8   20]
 [  13    2  118   13 4979    4   59   60  123  351]
 [   4   14  114   93   12 4877   65    3   89  268]
 [  11    5  129    5   23  116 5305    0  264    0]
 [   8   42  241  483   31    1    2 5215   54   20]
 [ 250    1  148  245   27   25   72   10 4815  102]
 [  47    3  124  164  110   14    6  120  137 5088]]
 
Treinando LDA para entrada: 5000
Acuracia: 0.890530
[[5240   11   14   43   40    1   89   17  104    1]
 [   0 5413  475  107    9   81  133  304   68   65]
 [  19   48 5422    9    1    0   29  327   32    1]
 [   4   30   41 5118    0   27    5  557   20   17]
 [  21  177   45    0 4895    0   88    9   60  427]
 [  10   20   17  289    3 4978   80   40   72   30]
 [ 105   38   31   20  155   77 5311    0  120    1]
 [   0  119   44    1   35    1    0 5836   35   26]
 [ 132   72   36    9   68   44  129   70 4650  485]
 [  26   39   11  135   58    8   20  111   42 5363]]
 
Treinando Logistic Regression para entrada: 5000
Acuracia: 0.807404
[[5033    8   17   87   46   20  300   13   35    1]
 [   2 3532  206  255  304   99 1338  106  155  658]
 [  30   27 5354   50   25    2  152  213   32    3]
 [  10    9   60 5202   87   51   16  334    7   43]
 [  37    6   15    1 5307    1  149   48    2  156]
 [  16   10   21 1063  324 3787  193   89   22   14]
 [  77   35    0    3   42  177 5436    0   88    0]
 [   0   78   28   73  251    6    0 5462    9  190]
 [ 484   65   57   49  219   66  386  201 3485  683]
 [  59   33    6  141  515    2    9  288    7 4753]]
 
Treinando KNN para entrada: 6000
Acuracia: 0.920455
[[5436    5    1   22    6    1   57    3   29    0]
 [   2 5958  170  129   58    4   82   76  114   62]
 [  20   14 5448  300    6    2   19   50   26    3]
 [   6    7   19 5595    6   36    3  109   20   18]
 [  13    9   26    4 5309    0  157   25   13  166]
 [   7    6    8  578   36 4612   52   33  135   72]
 [  42   17    3    0   11  101 5579    0  105    0]
 [   1   23   56  103   78    1    1 5732   21   81]
 [  55   50   43  124   51   20   63   36 5075  178]
 [  13   15   13  157  160    5    7  174   32 5237]]
 
Treinando Naive Bayes para entrada: 6000
Acuracia: 0.869352
[[5088    1   29   51   23   11   60    0  296    1]
 [   3 4791  747  257  103   20  115  420  140   59]
 [  12   19 5042  661   13    1   18   79   41    2]
 [   4    1  337 5212    2   27    0  203    9   24]
 [   8    2   96    6 5143    3   52   57  104  251]
 [   2    9   69   93    5 4817   51    4  129  360]
 [  12    6  124    4   20  102 5338    0  252    0]
 [   3   30  187  340   24    0    1 5412   63   37]
 [ 194    2   99  197   26   16   55   12 5014   80]
 [  36    3   63  171  185    6    3   72  147 5127]]
 
Treinando LDA para entrada: 6000
Acuracia: 0.902517
[[5260   14   13   23   36    1   75   22  115    1]
 [   0 5642  337   86    5   46   91  322   50   76]
 [  20   38 5528    9    1    0   23  236   32    1]
 [   2   26   34 5224    0   24    3  463   23   20]
 [  20  141   41    0 4934    0   92   12   60  422]
 [  10   19   13  295    3 4960   62   47   89   41]
 [ 112   42   36   30  123   51 5296    0  166    2]
 [   0   66   40    2   31    1    0 5903   31   23]
 [  86   66   34    5   57   28   83   71 4766  499]
 [  28   32    9  108   50    1   22  112   35 5416]]
 
Treinando Logistic Regression para entrada: 6000
Acuracia: 0.827695
[[5049    8   20   91   37   20  280   12   42    1]
 [   1 3793  244  260  455   88 1081  170   90  473]
 [  25   32 5458   68   22    1   87  155   37    3]
 [   8   10   49 5316   57   42   10  276    7   44]
 [  38    6   14    1 5323    1  146   52    3  138]
 [  12   10   20 1054  277 3867  158   74   39   28]
 [  70   39    0    4   35  170 5439    0  101    0]
 [   0   72   26   72  227    4    0 5590   10   96]
 [ 307   71   54   49  200   55  271  172 3927  589]
 [  57   36    6  129  501    2    8  290    5 4779]]
 
Treinando KNN para entrada: 7000
Acuracia: 0.926917
[[5434    4    1   22    6    1   41    3   48    0]
 [   2 6021  156  115   59    6   69   72   95   60]
 [  16   13 5492  245    3    1   14   76   26    2]
 [   5    8   24 5614    2   43    1   82   22   18]
 [  13    8   27    5 5328    0  144   24   27  146]
 [   7    6    7  586   18 4633   52   18  159   53]
 [  39   14    3    0    8   59 5662    0   73    0]
 [   2   20   37  127   61    1    0 5753   11   85]
 [  46   40   46  105   47   21   53   37 5145  155]
 [  12   11   21  126  164    5    8  136   52 5278]]
 
Treinando Naive Bayes para entrada: 7000
Acuracia: 0.874245
[[5193    1    6   41    8    1   42    0  267    1]
 [   0 4825  725  259  116   23  117  453   95   42]
 [  12   15 5115  586   12    1   17   83   47    0]
 [   1    1  299 5234    3   33    0  190   38   20]
 [  13    2   64   11 5197    1   32   53  108  241]
 [  10    6   39   91   66 4750   54    4  268  251]
 [  74    6   92    5   20   84 5327    0  250    0]
 [   1   24  152  335   25    0    1 5449   75   35]
 [ 157    3   57  193   29   16   49   13 5104   74]
 [  35    2   56  139  209    4    2   79  210 5077]]
 
Treinando LDA para entrada: 7000
Acuracia: 0.912441
[[5313   12   14   16   27    0   61   22   93    2]
 [   0 5713  274   92    7   52   71  341   45   60]
 [  21   40 5530   10    1    0   22  235   28    1]
 [   1   16   30 5326    0   26    2  371   25   22]
 [  22   85   44    0 5114    0   87    9   37  324]
 [   9    9   12  291    4 4988   59   40   87   40]
 [ 107   46   36   29  120   43 5330    0  147    0]
 [   0   56   40    2   46    1    0 5910   22   20]
 [  84   54   36    5   65   33   67   68 4866  417]
 [  30   33    9   81   75    6   19  104   35 5421]]
 
Treinando Logistic Regression para entrada: 7000
Acuracia: 0.847867
[[5115    9   22   60   37   15  251    9   41    1]
 [   0 4203  248  251  678   75  695  230   73  202]
 [  27   29 5472   73   20    1   72  148   44    2]
 [   6   10   48 5372   54   40    6  234   11   38]
 [  37    6   15    2 5351    1  131   47    3  129]
 [  13   12   25  895  251 4105  116   59   42   21]
 [  73   42    0    1   43  131 5468    0  100    0]
 [   0   63   27   76  248    4    0 5601   12   66]
 [ 248   76   49   50  199   50  168  142 4276  437]
 [  62   33    8  132  536    2    6  267    6 4761]]
 
Treinando KNN para entrada: 8000
Acuracia: 0.930873
[[5451    3    1   16    5    2   37    3   41    1]
 [   1 6032  185  116   63    4   44   69   74   67]
 [  16   10 5556  197    3    1   14   69   20    2]
 [   5    4   21 5634    1   50    1   63   19   21]
 [  13   13   25    7 5316    0  141   22   17  168]
 [   8    4   12  568   10 4692   47   14  111   73]
 [  28   11    4    3    8   51 5701    0   52    0]
 [   2   20   38  133   66    1    0 5729   10   98]
 [  45   25   45  108   44   31   55   29 5122  191]
 [  12    9   23  109  124    6   10  131   30 5359]]
 
Treinando Naive Bayes para entrada: 8000
Acuracia: 0.882481
[[5209    1    9   31    3    1   51    0  254    1]
 [   1 5138  543  236   91   20  101  403   86   36]
 [  14   19 5170  540   10    1   15   71   46    2]
 [   1    1  268 5304    2   31    0  146   37   29]
 [  14    2   67    9 5204    1   31   50  111  233]
 [  10    6   31   93   55 4776   45    2  238  283]
 [  71    7   95    6   15   81 5309    0  274    0]
 [   1   33  149  398   22    0    1 5376   75   42]
 [ 146    3   49  171   25    7   41   12 5167   74]
 [  29    3   58  135  195    5    2   64  221 5101]]
 
Treinando LDA para entrada: 8000
Acuracia: 0.920762
[[5333   14   13   15   19    0   62   19   83    2]
 [   0 5940  218   97    8   34   44  246   26   42]
 [  21   38 5568   13    1    0   14  206   26    1]
 [   1   14   30 5405    1   20    2  302   22   22]
 [  21   90   51    0 5133    0   88    6   32  301]
 [   8   10    8  326    5 4970   63   34   71   44]
 [  81   42   38   34   77   34 5438    0  113    1]
 [   0   59   42    3   49    1    0 5894   25   24]
 [  81   59   42    6   56   28   70   56 4885  412]
 [  31   34    9   79   70    7   20   96   34 5433]]
 
Treinando Logistic Regression para entrada: 8000
Acuracia: 0.869607
[[5215    7   22   43   28    8  204    8   24    1]
 [   1 5081  156  244  361   60  407   95   44  206]
 [  27   22 5523   73   17    1   61  119   43    2]
 [   6    9   39 5467   32   43    4  171   10   38]
 [  35    8   16    1 5355    1  129   44    3  130]
 [  14   11   22  916  183 4164  106   41   41   41]
 [  66   39    0    1   37  119 5498    0   98    0]
 [   0   61   31   92  258    4    0 5562   12   77]
 [ 233   68   57   56  180   55  166  113 4282  485]
 [  60   33    8  130  482    2    6  233    7 4852]]
 
Treinando KNN para entrada: 9000
Acuracia: 0.934556
[[5469    3    1   16    5    2   25    2   36    1]
 [   0 6079  165  113   61    2   38   72   61   64]
 [  15   15 5593  167    3    1   14   59   19    2]
 [   4    3   25 5638    1   51    1   60   17   19]
 [  13   14   16    4 5313    0  136   21   16  189]
 [   9    4   11  584    7 4718   44   12   93   57]
 [  37   11    4    3    8   49 5700    0   46    0]
 [   1   27   42  129   69    1    0 5729    8   91]
 [  39   25   47   99   31   26   56   30 5166  176]
 [  17    9   23  108   83    7    8  126   29 5403]]
 
Treinando Naive Bayes para entrada: 9000
Acuracia: 0.887358
[[5212    1   10   32    2    1   44    0  257    1]
 [   1 5175  565  213   88   16   82  383   98   34]
 [  14   22 5255  464    7    1   13   65   44    3]
 [   1    1  196 5391    2   29    0  139   35   25]
 [  14    2   66   10 5220    3   33   45  104  225]
 [   9    6   30  108   36 4896   46    2  187  219]
 [  78    7   94    6   14   84 5289    0  286    0]
 [   1   40  170  406   21    1    1 5341   73   43]
 [ 148    3   47  175   26   11   38   13 5157   77]
 [  28    3   44  155  221    4    1   54  199 5104]]
 
Treinando LDA para entrada: 9000
Acuracia: 0.923712
[[5352   13   11   16   20    0   50   17   79    2]
 [   0 5982  205   92    8   21   42  234   31   40]
 [  20   37 5595   12    1    0   11  186   25    1]
 [   1   12   31 5436    1   18    2  277   21   20]
 [  25   88   47    0 5143    0   87    7   31  294]
 [   9   11    6  340    5 4970   56   26   69   47]
 [  84   46   37   28   74   37 5419    0  130    3]
 [   0   60   48    4   52    1    0 5880   28   24]
 [  87   56   39    4   50   27   56   52 4958  366]
 [  35   31    9   88   61    6   18   96   32 5437]]
 
Treinando Logistic Regression para entrada: 9000
Acuracia: 0.879651
[[5271    6   21   33   26    6  165    7   24    1]
 [   2 5264  131  236  337   55  330   83   44  173]
 [  27   20 5561   72   18    1   51  102   34    2]
 [   5    9   40 5486   32   43    2  154   14   34]
 [  37    8   16    1 5356    1  121   48    4  130]
 [  14   12   20  889  158 4235   99   34   43   35]
 [  68   42    0    1   34  113 5489    0  111    0]
 [   0   55   37  103  265    3    0 5551   12   71]
 [ 194   66   51   54  158   52  134  102 4472  412]
 [  61   29    8  142  432    1    6  223    8 4903]]
 
Treinando KNN para entrada: 10000
Acuracia: 0.938223
[[5476    3    2   16    4    2   24    2   30    1]
 [   0 6121  167  116   57    4   35   62   34   59]
 [  14   14 5607  161    3    1   15   51   20    2]
 [   4    3   26 5645    2   52    1   52   18   16]
 [  15   13   15    5 5307    2  130   22   11  202]
 [  10    4   11  499    4 4835   39   13   81   43]
 [  33   11    5    2    3   45 5719    0   40    0]
 [   1   28   47  122   60    1    0 5755    7   76]
 [  39   25   51  112   33   35   48   30 5155  167]
 [  19   10   22  111   79    6    8  129   26 5403]]
 
Treinando Naive Bayes para entrada: 10000
Acuracia: 0.889080
[[5220    1   11   32    2    1   41    0  251    1]
 [   1 5184  583  238   86   22   85  340   80   36]
 [   9   24 5289  447    4    1    8   52   53    1]
 [   2    1  212 5390    1   33    0  127   31   22]
 [  14    2   44   12 5273    0   32   44   90  211]
 [   9    6   29  103   31 4958   46    2  169  186]
 [  78    7   89    8   15   90 5286    0  285    0]
 [   1   47  175  426   21    1    1 5323   60   42]
 [ 175    5   53  182   23    7   38   13 5112   87]
 [  25    5   62  151  221    4    0   55  184 5106]]
 
Treinando LDA para entrada: 10000
Acuracia: 0.927855
[[5358   10   11   15   19    0   47   17   80    3]
 [   0 6027  222   85    9   22   38  199   31   22]
 [  22   41 5605   12    1    0    4  175   27    1]
 [   1   12   29 5470    1   19    1  247   23   16]
 [  20   71   42    0 5208    0   86    5   29  261]
 [   9   11    6  314    4 5015   50   24   67   39]
 [  77   49   37   15   56   36 5460    0  125    3]
 [   0   58   47    6   58    1    0 5882   22   23]
 [  80   59   38    5   51   29   54   57 4961  361]
 [  34   31    9   91   69    7   16   98   29 5429]]
 
Treinando Logistic Regression para entrada: 10000
Acuracia: 0.886744
[[5287    6   21   29   23    5  158    7   23    1]
 [   1 5374  139  238  316   56  290   68   28  145]
 [  26   22 5572   75   17    1   45   91   37    2]
 [   5    9   41 5537   21   41    1  119   15   30]
 [  34    7   16    1 5349    1  122   49    7  136]
 [  10   15   20  814  139 4358   82   27   48   26]
 [  66   41    0    1   27  107 5504    0  112    0]
 [   0   53   39  120  249    4    0 5553   13   66]
 [ 177   72   50   60  140   58  120   89 4528  401]
 [  59   33    9  145  398    1    6  212    8 4942]]
 
Treinando KNN para entrada: 11000
Acuracia: 0.938086
[[5476    3    2   16    4    2   23    2   31    1]
 [   0 6109  171  115   56    5   37   65   35   62]
 [  13   14 5606  161    2    1   15   52   22    2]
 [   4    4   27 5640    2   51    1   56   18   16]
 [  13   13   16    5 5308    2  132   21   12  200]
 [  10    4   11  494    4 4827   40   13   88   48]
 [  33   10    5    2    3   45 5717    0   43    0]
 [   1   19   44  123   54    1    0 5771    7   77]
 [  38   26   49  114   34   34   46   30 5159  165]
 [  18    9   22  111   80    6    8  128   29 5402]]
 
Treinando Naive Bayes para entrada: 11000
Acuracia: 0.887409
[[5210    1   13   37    2    1   41    0  254    1]
 [   2 5129  632  250   82   20  101  327   72   40]
 [   9   23 5312  425    5    1    8   51   53    1]
 [   2    1  221 5380    2   31    0  134   26   22]
 [  14    2   59   14 5250    0   33   46   93  211]
 [  10    6   34  105   37 4957   44    2  165  179]
 [  74    7   98    5   17   91 5285    0  281    0]
 [   1   51  187  433   20    1    1 5306   55   42]
 [ 180    4   57  184   20    8   38   13 5106   85]
 [  27    3   69  147  223    6    0   52  178 5108]]
 
Treinando LDA para entrada: 11000
Acuracia: 0.926065
[[5367   10   11   17   21    0   48   17   66    3]
 [   0 6002  234   88    9   29   40  201   28   24]
 [  22   42 5601   12    1    0    4  179   27    0]
 [   1   13   27 5447    1   19    2  273   21   15]
 [  21   80   46    0 5203    0   82    6   25  259]
 [   9   12    7  321    5 5005   50   26   65   39]
 [  78   47   37   19   58   38 5451    0  127    3]
 [   0   69   43    4   54    1    0 5880   22   24]
 [  81   62   39    4   50   28   58   60 4926  387]
 [  34   32    9   96   65    7   16   99   27 5428]]
 
Treinando Logistic Regression para entrada: 11000
Acuracia: 0.886744
[[5297    5   21   31   25    5  147    7   21    1]
 [   2 5327  140  253  338   58  293   66   37  141]
 [  27   23 5588   72   15    1   35   88   37    2]
 [   5    8   42 5529   27   39    1  119   16   33]
 [  35    6   18    1 5349    1  116   48    7  141]
 [  10   13   22  757  141 4410   84   28   48   26]
 [  68   40    0    1   28  104 5504    0  113    0]
 [   0   54   39  117  250    3    0 5551   14   69]
 [ 186   64   54   61  145   57  126   87 4500  415]
 [  59   30    9  143  400    1    6  207    9 4949]]
 
Treinando KNN para entrada: 12000
Acuracia: 0.938666
[[5475    3    3   16    4    2   23    1   32    1]
 [   0 6113  155  128   56    5   37   65   34   62]
 [  10   13 5605  155    4    1   18   54   26    2]
 [   4    4   26 5630    2   60    1   53   22   17]
 [  13   13   17    5 5310    2  129   22   12  199]
 [  10    5    9  431    3 4891   41   12   85   52]
 [  32   10    5    2    4   43 5717    0   45    0]
 [   1   19   46  123   53    1    0 5767    6   81]
 [  33   26   45  119   34   40   50   30 5150  168]
 [  17   10   22  114   84    7    8  129   31 5391]]
 
Treinando Naive Bayes para entrada: 12000
Acuracia: 0.886386
[[5211    1   11   34    2    1   38    0  261    1]
 [   1 5097  619  301   81   21  105  311   77   42]
 [   9   23 5295  442    3    1    8   55   52    0]
 [   2    1  209 5390    2   31    0  136   26   22]
 [  13    2   57   15 5238    0   37   46   88  226]
 [   9    7   32  104   32 4952   44    2  170  187]
 [  73    7   96    6   17   95 5268    0  296    0]
 [   2   48  182  435   20    1    1 5312   54   42]
 [ 182    4   52  193   20   10   38   13 5096   87]
 [  25    2   63  159  206    5    0   51  178 5124]]
 
Treinando LDA para entrada: 12000
Acuracia: 0.924547
[[5358    8   12   15   22    0   52   17   74    2]
 [   0 5991  225   94    9   31   42  209   29   25]
 [  21   39 5594   12    1    0    5  190   25    1]
 [   1   14   30 5422    1   19    2  293   23   14]
 [  25   92   44    0 5174    0   83    6   30  268]
 [   9   12    7  312    4 5013   54   26   65   37]
 [  79   46   36   19   60   41 5452    0  122    3]
 [   0   67   45    4   51    1    0 5882   22   25]
 [  83   61   37    4   51   32   63   58 4913  393]
 [  34   34    9   98   66    7   17   98   28 5422]]
 
Treinando Logistic Regression para entrada: 12000
Acuracia: 0.887119
[[5296    5   20   33   25    5  145    7   23    1]
 [   2 5328  127  273  335   63  297   68   29  133]
 [  27   22 5587   73   17    1   34   90   35    2]
 [   5    9   42 5528   25   37    1  120   17   35]
 [  36    7   15    1 5349    1  119   47    5  142]
 [  10   13   21  760  135 4408   84   29   50   29]
 [  66   39    0    1   29  104 5502    0  117    0]
 [   0   55   37  120  243    3    0 5550   11   78]
 [ 177   64   47   63  142   59  124   84 4521  414]
 [  61   30    9  145  390    2    6  206    7 4957]]
 
Treinando KNN para entrada: 13000
Acuracia: 0.938683
[[5469    3    4   16    6    2   23    1   34    2]
 [   0 6114  163  123   56    5   38   65   34   57]
 [  11   12 5603  154    4    3   19   54   26    2]
 [   4    3   25 5633    2   58    1   53   23   17]
 [  12   13   16    5 5310    2  130   23   13  198]
 [  10    5    9  428    4 4898   40   13   81   51]
 [  32   10    5    2    4   48 5711    0   46    0]
 [   1   20   46  119   53    1    0 5772    6   79]
 [  34   30   39  118   36   40   53   28 5152  165]
 [  13   12   24  112   84    8    8  129   35 5388]]
 
Treinando Naive Bayes para entrada: 13000
Acuracia: 0.888705
[[5198    1   11   32    4    1   46    0  266    1]
 [   1 5192  564  266   87   21  101  313   73   37]
 [   8   24 5291  436    6    1   11   56   55    0]
 [   2    1  227 5368    2   30    0  135   31   23]
 [  11    3   51   12 5243    0   39   45   91  227]
 [   7    6   32  103   32 4963   48    2  161  185]
 [  67    7   88    4   16   96 5330    0  250    0]
 [   3   49  182  441   21    0    1 5306   56   38]
 [ 179    4   56  171   21   12   41   13 5108   90]
 [  23    3   69  150  204    5    0   59  180 5120]]
 
Treinando LDA para entrada: 13000
Acuracia: 0.924223
[[5351    8   13   15   22    0   57   17   76    1]
 [   0 5996  233   94    8   35   40  203   22   24]
 [  20   41 5591   12    1    0    7  191   24    1]
 [   1   16   29 5412    1   17    2  305   21   15]
 [  19   98   43    0 5168    0   85    8   26  275]
 [   8   12    7  306    5 5018   54   25   67   37]
 [  80   49   36   23   65   45 5434    0  123    3]
 [   0   72   45    3   53    1    0 5880   22   21]
 [  80   65   37    4   50   32   60   55 4921  391]
 [  28   34   11   98   62    8   17   99   25 5431]]
 
Treinando Logistic Regression para entrada: 13000
Acuracia: 0.889950
[[5296    5   20   37   26    6  141    7   21    1]
 [   3 5413  122  252  314   70  279   71   26  105]
 [  26   22 5578   76   17    1   37   94   35    2]
 [   5    9   39 5528   26   38    1  125   18   30]
 [  35    7   16    1 5353    1  115   48    3  143]
 [  10   13   18  712  140 4464   79   30   50   23]
 [  66   39    0    2   32  110 5497    0  112    0]
 [   0   55   38  119  245    3    0 5563   12   62]
 [ 173   58   45   53  145   59  122   84 4553  403]
 [  54   29    9  144  407    2    6  208    7 4947]]
 
Treinando KNN para entrada: 14000
Acuracia: 0.938171
[[5469    3    3   17    6    2   24    2   32    2]
 [   0 6100  173  118   52    5   46   69   37   55]
 [  10   12 5613  148    4    3   16   54   26    2]
 [   4    4   20 5638    2   57    2   53   22   17]
 [  11   12   19    5 5302    2  130   24   16  201]
 [  10    5   10  423    3 4900   41   15   83   49]
 [  31    9    4    4    5   47 5711    0   47    0]
 [   1   21   45  119   56    1    1 5766    7   80]
 [  39   31   41  129   35   37   53   28 5137  165]
 [  11   13   21  114   80    7    8  140   35 5384]]
 
Treinando Naive Bayes para entrada: 14000
Acuracia: 0.885465
[[5194    1   10   41    5    1   46    0  261    1]
 [   1 5147  592  276   86   23   89  313   90   38]
 [   9   23 5216  513    7    1   12   54   53    0]
 [   2    1  234 5358    2   30    0  140   29   23]
 [   8    2   50   15 5246    0   38   45   87  231]
 [   7    6   35  103   31 4959   45    2  164  187]
 [  67    7   92    5   20   99 5309    0  259    0]
 [   3   48  179  441   22    1    1 5307   57   38]
 [ 183    4   51  197   22   13   43   13 5082   87]
 [  22    3   72  154  199    5    0   63  184 5111]]
 
Treinando LDA para entrada: 14000
Acuracia: 0.922041
[[5339    9   13   17   23    0   60   17   80    2]
 [   0 5964  247   95    8   36   46  213   21   25]
 [  20   39 5590   12    1    0   10  189   27    0]
 [   1   16   29 5398    0   17    2  319   23   14]
 [  21   99   48    0 5137    0   84    9   32  292]
 [   8   11   10  307    6 5010   56   26   67   38]
 [  82   50   36   23   69   44 5435    0  116    3]
 [   0   71   45    3   49    1    0 5883   25   20]
 [  85   67   36    4   48   33   69   59 4900  394]
 [  30   33   12  104   62    7   17  105   25 5418]]
 
Treinando Logistic Regression para entrada: 14000
Acuracia: 0.889387
[[5289    5   19   37   27    6  146    7   23    1]
 [   3 5366  137  246  325   80  288   69   27  114]
 [  24   22 5575   72   17    1   42   93   40    2]
 [   5    9   40 5522   25   39    1  132   17   29]
 [  36    7   15    1 5347    0  112   48    4  152]
 [  10   13   17  688  141 4487   78   34   46   25]
 [  67   37    0    2   39  110 5500    0  103    0]
 [   0   57   40  124  237    3    0 5558   16   62]
 [ 177   58   48   52  147   59  125   86 4556  387]
 [  55   30   10  141  381    2    5  223    7 4959]]
 
Treinando KNN para entrada: 15000
Acuracia: 0.937421
[[5470    3    2   16    6    2   25    2   32    2]
 [   0 6093  174  118   53    5   46   69   40   57]
 [  11   13 5614  147    3    3   15   56   24    2]
 [   4    4   23 5629    2   58    2   57   22   18]
 [  12   10   19    4 5299    2  130   26   18  202]
 [   9    5    9  416    7 4898   44   15   86   50]
 [  34    9    3    4    5   43 5705    0   55    0]
 [   1   19   44  118   56    1    1 5757    7   93]
 [  41   30   38  132   36   37   52   29 5135  165]
 [  11    9   19  103  107    6    8  139   35 5376]]
 
Treinando Naive Bayes para entrada: 15000
Acuracia: 0.884425
[[5238    1   10   42    4    1   46    0  217    1]
 [   1 5091  620  276   84   20   90  334   92   47]
 [   9   23 5213  511    7    1   12   61   51    0]
 [   2    1  240 5352    2   29    0  143   27   23]
 [  12    2   45   13 5230    1   39   49   91  240]
 [   7    6   34  102   26 4961   48    3  158  194]
 [  71    7   91    5   19   97 5294    0  274    0]
 [   2   52  175  455   23    0    1 5296   52   41]
 [ 185    4   61  194   21   12   44   14 5069   91]
 [  38    3   72  149  186    5    0   62  174 5124]]
 
Treinando LDA para entrada: 15000
Acuracia: 0.920830
[[5335    9   14   18   24    0   59   17   81    3]
 [   0 5945  265   91    7   36   47  216   20   28]
 [  21   41 5581   12    1    0   13  192   27    0]
 [   1   18   30 5397    0   17    2  314   24   16]
 [  21   97   46    0 5146    0   85    6   34  287]
 [   8   12   10  314    5 4996   58   28   71   37]
 [  83   47   35   25   70   46 5422    0  128    2]
 [   0   73   43    3   52    1    0 5871   29   25]
 [  90   62   35    6   51   32   64   63 4888  404]
 [  32   32   11  102   61    7   18  100   28 5422]]
 
Treinando Logistic Regression para entrada: 15000
Acuracia: 0.889421
[[5301    5   19   34   27    6  140    7   20    1]
 [   3 5348  142  245  325   77  288   68   30  129]
 [  26   22 5582   62   18    1   41   98   36    2]
 [   5    8   37 5521   28   40    1  131   18   30]
 [  37    8   13    1 5340    0  115   45    4  159]
 [  14   13   17  684  142 4481   80   35   47   26]
 [  70   34    0    2   40  104 5492    0  116    0]
 [   0   56   40  124  241    3    0 5558   15   60]
 [ 185   55   44   53  148   58  125   86 4549  392]
 [  55   30   10  140  366    2    5  209    7 4989]]
 
Treinando KNN para entrada: 16000
Acuracia: 0.938120
[[5460    3    2   16    6    2   25    2   42    2]
 [   1 6094  171  131   57    4   43   67   44   43]
 [  12   12 5608  154    4    3   15   54   24    2]
 [   4    3   21 5635    2   54    2   58   22   18]
 [  11    9   17    3 5314    1  137   28   22  180]
 [   8    5    9  390    7 4907   41   15  101   56]
 [  31    9    3    4    4   44 5695    0   68    0]
 [   1   17   44  118   46    2    1 5779    5   84]
 [  39   30   38  127   34   34   49   28 5148  168]
 [  11    8   17  102  111    7    8  140   32 5377]]
 
Treinando Naive Bayes para entrada: 16000
Acuracia: 0.885892
[[5213    1   10   36    4    1   43    0  251    1]
 [   2 5115  600  258   86   22   90  347   91   44]
 [   9   25 5226  503    6    1   10   61   47    0]
 [   2    1  232 5356    2   30    0  146   28   22]
 [  13    2   47   13 5253    1   36   50   85  222]
 [   7    6   33  102   23 4949   45    3  166  205]
 [  72    7   90    5   20   97 5303    0  264    0]
 [   2   49  177  414   22    1    1 5338   51   42]
 [ 180    4   50  200   24    8   41   14 5087   87]
 [  34    3   63  155  203    5    0   61  175 5114]]
 
Treinando LDA para entrada: 16000
Acuracia: 0.921052
[[5329    9   14   16   24    0   60   18   88    2]
 [   0 5940  258   86    8   32   43  230   30   28]
 [  20   42 5586   12    1    0   12  187   27    1]
 [   1   18   30 5407    0   17    2  304   22   18]
 [  21   95   45    0 5141    0   89    8   31  292]
 [   9   12    9  314    5 4995   55   28   71   41]
 [  84   45   36   26   70   42 5412    0  141    2]
 [   0   66   45    3   48    1    0 5885   25   24]
 [  82   64   35    5   52   29   61   63 4893  411]
 [  32   33   11   95   61    6   18  102   27 5428]]
 
Treinando Logistic Regression para entrada: 16000
Acuracia: 0.893701
[[5307    5   20   31   25    6  135    7   23    1]
 [   3 5397  140  242  328   73  263   75   27  107]
 [  25   22 5585   66   17    1   39   92   39    2]
 [   5    8   37 5528   25   38    1  128   19   30]
 [  36    9   14    1 5347    0  114   45    4  152]
 [  11   14   15  647  140 4519   76   34   52   31]
 [  70   36    0    1   40  100 5494    0  117    0]
 [   0   56   38  104  223    3    0 5612   15   46]
 [ 159   53   43   52  143   49  115   85 4611  385]
 [  53   30   10  132  354    2    5  208    7 5012]]
 
Treinando KNN para entrada: 17000
Acuracia: 0.937370
[[5452    3    2   14    6    2   28    2   49    2]
 [   1 6089  169  124   57    9   42   63   48   53]
 [  14   11 5587  156    3    3   16   69   27    2]
 [   4    2   20 5629    1   54    2   67   24   16]
 [  12   10   19    3 5321    0  133   29   27  168]
 [   9    4    9  397    8 4900   46   14   99   53]
 [  31    9    3    3    4   41 5699    0   68    0]
 [   1   14   37  131   44    2    1 5775    6   86]
 [  37   30   39  127   32   30   53   30 5147  170]
 [   9    8   16   91  118    9    9  131   48 5374]]
 
Treinando Naive Bayes para entrada: 17000
Acuracia: 0.886437
[[5221    1    9   35    4    1   41    0  247    1]
 [   1 5084  618  238   90   23   95  384   85   37]
 [   9   24 5226  496    6    1    9   66   51    0]
 [   2    1  228 5352    2   32    0  147   33   22]
 [  13    2   48   10 5263    1   35   50   86  214]
 [   8    6   30  101   39 4943   47    2  179  184]
 [  78    7   89    5   18   87 5312    0  262    0]
 [   1   42  155  394   22    1    1 5383   60   38]
 [ 178    4   54  187   26    6   43   14 5096   87]
 [  35    3   62  147  212    4    0   60  184 5106]]
 
Treinando LDA para entrada: 17000
Acuracia: 0.923149
[[5338   11   11   15   22    0   57   17   87    2]
 [   0 5952  235   94    8   35   42  233   29   27]
 [  21   44 5568   12    1    0   13  201   27    1]
 [   1   15   29 5425    1   17    1  289   23   18]
 [  22   79   42    0 5179    0   88    7   31  274]
 [  10   10    8  308    6 5000   55   28   73   41]
 [  84   45   37   24   70   38 5420    0  138    2]
 [   0   59   48    3   50    1    0 5889   23   24]
 [  79   59   36    6   57   29   58   57 4935  379]
 [  33   31    9   86   69    7   17  100   28 5433]]
 
Treinando Logistic Regression para entrada: 17000
Acuracia: 0.897725
[[5326    5   21   25   26    5  119    7   25    1]
 [   3 5443  139  235  353   72  229   85   21   75]
 [  26   22 5581   66   18    1   38   94   39    3]
 [   5    7   36 5533   27   35    1  128   20   27]
 [  37    8   15    1 5361    0  109   44    3  144]
 [  11   14   15  610  141 4566   72   30   52   28]
 [  71   34    0    1   42   92 5514    0  104    0]
 [   0   51   37  103  219    3    0 5630   14   40]
 [ 156   56   46   51  137   47   92   78 4689  343]
 [  55   29   10  126  375    2    5  199    7 5005]]
 
Treinando KNN para entrada: 18000
Acuracia: 0.936875
[[5454    3    1   11    6    2   30    2   48    3]
 [   1 6052  177  122   64    8   36   76   58   61]
 [  15   13 5586  156    3    1   16   65   29    4]
 [   4    1   20 5625    1   56    2   63   25   22]
 [  13    9   23    2 5308    0  137   29   24  177]
 [   9    3    9  378    4 4915   45   12   88   76]
 [  25    9    5    2    4   44 5706    0   63    0]
 [   1   14   32  128   48    2    1 5762    5  104]
 [  38   24   37  110   33   34   58   27 5152  182]
 [   9    8   17   95  113    8   10  123   46 5384]]
 
Treinando Naive Bayes para entrada: 18000
Acuracia: 0.888057
[[5220    1    9   33    2    1   45    0  248    1]
 [   1 5170  561  238   86   22   98  363   79   37]
 [   9   24 5244  479    6    1   11   61   52    1]
 [   2    1  219 5369    2   32    0  136   33   25]
 [  14    2   50   11 5247    1   33   48   93  223]
 [   9    6   26  103   34 4945   46    2  174  194]
 [  77    7   90    7   17   88 5304    0  268    0]
 [   1   44  159  412   22    1    1 5353   61   43]
 [ 174    3   52  179   24    6   42   14 5111   90]
 [  30    3   60  145  204    5    0   56  192 5118]]
 
Treinando LDA para entrada: 18000
Acuracia: 0.925059
[[5344   11   11   15   20    0   55   17   84    3]
 [   0 5994  216   93    9   29   39  218   30   27]
 [  21   39 5588   12    1    0    8  190   28    1]
 [   1   14   30 5444    1   18    2  270   20   19]
 [  20   83   46    0 5185    0   87    7   28  266]
 [   8   10    8  317    6 4999   55   27   66   43]
 [  81   47   37   23   68   35 5442    0  123    2]
 [   0   60   49    4   51    1    0 5883   25   24]
 [  80   58   39    5   54   29   60   56 4935  379]
 [  34   31    9   82   68    7   18   96   31 5437]]
 
Treinando Logistic Regression para entrada: 18000
Acuracia: 0.901050
[[5351    5   19   18   23    3  112    8   20    1]
 [   3 5552  126  237  282   73  208   72   19   83]
 [  25   22 5602   60   16    1   31   92   36    3]
 [   5    7   36 5554   16   36    1  116   19   29]
 [  37    7   18    1 5360    0  106   41    4  148]
 [  11   13   14  616  129 4568   73   25   52   38]
 [  72   34    0    1   38   91 5522    0  100    0]
 [   0   50   40  113  222    3    0 5615   15   39]
 [ 155   52   47   53  133   51   92   68 4680  364]
 [  55   29   10  121  358    2    5  187    7 5039]]
 
Treinando KNN para entrada: 19000
Acuracia: 0.937762
[[5459    3    1   12    6    2   28    2   44    3]
 [   1 6074  161  114   61    7   34   79   62   62]
 [  14   13 5602  149    3    1   16   58   28    4]
 [   4    1   21 5624    0   58    1   62   25   23]
 [  15    9   21    2 5300    0  135   28   23  189]
 [   9    3    9  419    3 4879   45   10   86   76]
 [  26    9    5    2    5   44 5705    0   62    0]
 [   1   17   34  124   49    2    1 5762    5  102]
 [  36   23   34  105   32   30   56   25 5183  171]
 [  10    8   15   94   91    7    7  126   47 5408]]
 
Treinando Naive Bayes para entrada: 19000
Acuracia: 0.888518
[[5224    1   10   32    2    1   43    0  246    1]
 [   1 5179  576  232   85   23   88  356   80   35]
 [   9   24 5269  459    6    1   10   56   53    1]
 [   2    1  206 5390    1   32    0  134   31   22]
 [  15    2   52   12 5251    1   32   47   89  221]
 [   9    6   28  106   32 4942   46    2  170  198]
 [  79    7   90    7   16   88 5297    0  274    0]
 [   1   45  171  421   22    1    1 5333   61   41]
 [ 172    3   50  185   24    7   38   13 5114   89]
 [  26    5   52  158  219    4    0   54  186 5109]]
 
Treinando LDA para entrada: 19000
Acuracia: 0.926423
[[5355   10   11   16   20    0   51   17   78    2]
 [   0 6010  216   87    8   22   39  216   31   26]
 [  20   39 5602   12    1    0    6  180   27    1]
 [   1   13   29 5456    1   18    1  259   22   19]
 [  25   81   41    0 5184    0   87    7   30  267]
 [   9   10    6  322    6 4999   53   24   67   43]
 [  82   48   38   20   64   36 5442    0  125    3]
 [   0   59   48    4   55    1    0 5881   26   23]
 [  82   55   39    4   53   25   57   55 4965  360]
 [  34   31    9   90   62    7   17   96   30 5437]]
 
Treinando Logistic Regression para entrada: 19000
Acuracia: 0.903847
[[5368    5   18   16   20    3   99    8   22    1]
 [   3 5606  117  235  270   69  191   70   19   75]
 [  25   22 5608   59   17    1   29   90   34    3]
 [   5    7   35 5557   18   37    1  111   20   28]
 [  38    8   19    0 5365    0  101   42    4  145]
 [  11   13   14  609  123 4584   72   24   52   37]
 [  72   35    0    1   37   90 5519    0  104    0]
 [   0   49   42  117  230    3    0 5603   15   38]
 [ 147   53   46   50  127   49   90   66 4740  327]
 [  56   29   10  127  334    2    5  186    7 5057]]
 
Treinando KNN para entrada: 20000
Acuracia: 0.939996
[[5466    3    1   12    4    2   25    2   42    3]
 [   0 6113  157  121   55   10   32   74   38   55]
 [  14   14 5616  143    4    1   16   50   27    3]
 [   4    1   22 5628    0   62    1   54   25   22]
 [  14    7   20    1 5292   21  113   29   14  211]
 [  10    3    8  377    2 4939   38   10   81   71]
 [  26    9    5    2    4   44 5723    0   45    0]
 [   1   16   45  123   47    2    1 5762    5   95]
 [  34   22   33  114   34   29   54   25 5176  174]
 [  11    8   15   93   91   11    7  119   46 5412]]
 
Treinando Naive Bayes para entrada: 20000
Acuracia: 0.889080
[[5220    1   11   32    2    1   41    0  251    1]
 [   1 5184  583  238   86   22   85  340   80   36]
 [   9   24 5289  447    4    1    8   52   53    1]
 [   2    1  212 5390    1   33    0  127   31   22]
 [  14    2   44   12 5273    0   32   44   90  211]
 [   9    6   29  103   31 4958   46    2  169  186]
 [  78    7   89    8   15   90 5286    0  285    0]
 [   1   47  175  426   21    1    1 5323   60   42]
 [ 175    5   53  182   23    7   38   13 5112   87]
 [  25    5   62  151  221    4    0   55  184 5106]]
 
Treinando LDA para entrada: 20000
Acuracia: 0.927855
[[5358   10   11   15   19    0   47   17   80    3]
 [   0 6027  222   85    9   22   38  199   31   22]
 [  22   41 5605   12    1    0    4  175   27    1]
 [   1   12   29 5470    1   19    1  247   23   16]
 [  20   71   42    0 5208    0   86    5   29  261]
 [   9   11    6  314    4 5015   50   24   67   39]
 [  77   49   37   15   56   36 5460    0  125    3]
 [   0   58   47    6   58    1    0 5882   22   23]
 [  80   59   38    5   51   29   54   57 4961  361]
 [  34   31    9   91   69    7   16   98   29 5429]]
 
Treinando Logistic Regression para entrada: 20000
Acuracia: 0.906916
[[5372    5   18   17   20    3   96    7   21    1]
 [   3 5642  120  232  260   71  180   60   20   67]
 [  26   21 5613   63   15    1   28   82   36    3]
 [   4    7   34 5578   17   38    1   91   21   28]
 [  38    9   19    0 5364    0  100   44    6  142]
 [  10   14   15  584  103 4645   64   23   52   29]
 [  71   35    0    1   31   88 5527    0  105    0]
 [   0   50   41  119  223    3    0 5609   16   36]
 [ 141   55   45   52  120   52   86   61 4768  315]
 [  57   29   10  130  319    2    5  185    7 5069]]
